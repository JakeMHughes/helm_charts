apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-keycloak
  namespace: {{ .Values.namespace.name | default .Release.Namespace | default "default" }}
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: {{ .Release.Name }}-keycloak
        image: jboss/keycloak
        env:
        - name: KEYCLOAK_USER
          value: {{ .Values.master.username }}
        - name: KEYCLOAK_PASSWORD
          value: {{ .Values.master.password }}
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_VENDOR
          value: {{ .Values.database }}
        - name: DB_ADDR
          value: {{ .Release.Name }}-{{ .Values.database }}.{{ (get .Values ( printf "%s" .Values.database )).namespace.name | default .Release.Namespace | default "default" }}.svc.cluster.local
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          {{- if (get .Values ( printf "%s" .Values.database )).rootPassword.value }}
          #Using plain text
          value: {{ (get .Values ( printf "%s" .Values.database )).rootPassword.value }}
          {{- else if (get .Values ( printf "%s" .Values.database )).rootPassword.secret }}
          valueFrom:
            secretKeyRef:
              name: {{ (get .Values ( printf "%s" .Values.database )).rootPassword.secret.name }}
              key: {{ (get .Values ( printf "%s" .Values.database )).rootPassword.secret.key }}
          {{- end }}
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
